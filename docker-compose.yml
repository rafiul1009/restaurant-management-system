version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rms-backend
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./backend:/var/www
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=local
      - DB_CONNECTION=pgsql
      - DB_HOST=database
      - DB_PORT=5432
      - DB_DATABASE=restaurant_db
      - DB_USERNAME=postgres
      - DB_PASSWORD=secret
    networks:
      - rms-network
    depends_on:
      - database

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rms-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - rms-network
    depends_on:
      - backend

  database:
    image: postgres:15-alpine
    container_name: rms-database
    restart: unless-stopped
    environment:
      - POSTGRES_DB=restaurant_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rms-network

networks:
  rms-network:
    driver: bridge

volumes:
  postgres_data: